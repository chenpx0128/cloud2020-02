server:
  port: 9527


eureka:
  client:
    #表示自己注册进Eurekaserver
    registry-with-eureka: true
    #是否从eurekaserver中抓取已有的注册信息，默认true。单节点无所谓，集群必须设置true，才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  instance:
    hostname: cloud-gateway-service




spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用为服务名进行路由
      routes:
         - id: payment_routh   #payment_routh路由id，没有固定规则，但要求唯一，建议配合服务名
        # uri: http://localhost:8001  #配置后提供服务的路由地址
           uri: lb://cloud-payment-service #匹配后提供服务的路由地址
           predicates:
            - Path=/payment/get/**    #断言路径相匹配的进行路由
          # - After=2020-06-27T17:35:35.361+08:00[Asia/Shanghai]
         #  - Cookie=username,zzyy
          # - Header=X-Request-Id,\d+  #请求头要有X-Request-Id的属性，并且值为整数的正则表达式
          # - Method=GET,POST
          # - Query=username, \d+ #要有参数名username并且值为整数才能路由
          # - Host=**.cloud.com
           filters:
             - AddRequestParameter=X-Request-Id,1024 #过滤工厂会在匹配的请求头上加一对请求头，名称为X-Request-Id值为1024






         - id: payment_routh2   #payment_routh路由id，没有固定规则，但要求唯一，建议配合服务名
       # uri: http://localhost:8001  #配置后提供服务的路由地址
           uri: lb://cloud-payment-service #匹配后提供服务的路由地址
           predicates:
             - Path=/payment/lb/**    #断言路径相匹配的进行路由
